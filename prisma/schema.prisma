generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Novells {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  original_title String @unique

  url_to_all_chapters String

  slug           String @unique
  image_path     String
  ru_title       String @unique
  ru_description String

  views_count Int @default(0)

  chapters Chapters[]

  genre    Genres? @relation(fields: [genre_id], references: [id], onDelete: SetNull, onUpdate: Cascade)
  genre_id String?
  tags     Tags[]

  @@map("novells")
}

model Genres {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  ru_title String @unique
  slug     String @unique

  novells Novells[]

  @@map("genres")
}

model Tags {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  ru_title String @unique
  slug     String @unique

  novells Novells[]

  @@map("tags")
}

model Chapters {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  chapter_number Int
  cleane_number  Int

  title   String
  content String

  novells     Novells @relation(fields: [novell_slug], references: [slug], onDelete: Cascade, onUpdate: Cascade)
  novell_slug String

  @@unique([novell_slug, chapter_number])
  @@map("chapters")
}
